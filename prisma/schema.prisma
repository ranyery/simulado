// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

// npx prisma migrate dev --name create-users => 24/09/2023 08:21:45
model Users {
  id            String    @id @default(uuid())
  email         String    @unique
  password      String

  role          String    @default("USER")
  status        String    @default("PENDING_CONFIRMATION")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())

  @@map("users")
}

// npx prisma migrate dev --name create-subjects => 25/09/2023 19:08:21
model Subjects {
  id            String    @id @default(uuid())
  name          String
  description   String?

  @@map("subjects")
}

// npx prisma studio

// model Questions {
//   id              String    @id @default(uuid())
//   statement       String
//   answerOptions   String[]  @default([])
//   explanation     String?
//   questionType    String    @default("MULTIPLE_CHOICE")
//   source          Json
//   difficultyLevel String    @default("MEDIUM")
//   subject


//   @@map("questions")
// }




// export interface IQuestion {
//   // statement: string; // Enunciado => A pergunta ou problema apresentado
//   // answerOptions: IAnswer[]; // Uma lista de opções para a resposta da questão (para questões de múltipla escolha)
//   // explanation?: string; // Uma explicação opcional que fornece informações adicionais sobre a resposta correta
//   // questionType: EQuestionType;
//   // source: ISource; // Exemplo (ENEM 2022)
//   // difficultyLevel: EDifficultyLevel;
//   subject: ISubject; // A matéria à qual a questão está relacionada (matemática, história, etc.)
//   relatedTopics: ITopic[]; // Tópicos ou tags (da matéria) que ajudam a categorizar ou relacionar a questão a conceitos específicos (Matemática => Equação de 1º grau).
//   status: IQuestionStatus; // Indica se a questão está ativa, inativa, pendente de revisão, etc.
//   // authorId: string; // O autor da questão, se você desejar rastrear quem criou a questão.
//   createdAt: string; // A data foi ADICIONADA no sistema
//   updatedAt: string; // A data foi ATUALIZADA no sistema
// }
